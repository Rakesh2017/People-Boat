{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rakesh/langara/Term 4/final exam/people-boats-boilerplate-antd/client/src/components/layout/personWithBoats.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { GET_MY_BOATS } from '../../queries';\nimport { useQuery } from '@apollo/client';\n\nconst PersonWithBoats = ({\n  display,\n  id\n}) => {\n  _s();\n\n  const styles = {\n    container: {\n      display: display,\n      position: 'relative',\n      top: '20px'\n    },\n    list: {\n      listStyleType: 'none',\n      display: 'grid',\n      gridGap: '10px',\n      padding: '10px'\n    },\n    child: {\n      border: 'solid 1px',\n      padding: '10px'\n    },\n    grey: {\n      color: 'grey'\n    }\n  };\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_MY_BOATS, {\n    variables: {\n      personId: id\n    }\n  });\n  if (loading) return '..';\n  if (error) return `Errror! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [console.log('data=>', data.personWithboats), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Boats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.list,\n      children: data.personWithboats.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: styles.child,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.grey,\n            children: \"Model:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 58\n          }, this), \" \", item.model, \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.grey,\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 112\n          }, this), \" \", item.year, \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.grey,\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 164\n          }, this), \" $\", item.price, \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.grey,\n            children: \"Make:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 219\n          }, this), item.make]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PersonWithBoats, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = PersonWithBoats;\nexport default PersonWithBoats;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonWithBoats\");","map":{"version":3,"sources":["/Users/rakesh/langara/Term 4/final exam/people-boats-boilerplate-antd/client/src/components/layout/personWithBoats.js"],"names":["React","GET_MY_BOATS","useQuery","PersonWithBoats","display","id","styles","container","position","top","list","listStyleType","gridGap","padding","child","border","grey","color","loading","error","data","variables","personId","message","console","log","personWithboats","map","item","model","year","price","make"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAqB;AAAA;;AAEzC,QAAMC,MAAM,GAAI;AACZC,IAAAA,SAAS,EAAE;AACPH,MAAAA,OAAO,EAAEA,OADF;AAEPI,MAAAA,QAAQ,EAAE,UAFH;AAGPC,MAAAA,GAAG,EAAE;AAHE,KADC;AAMZC,IAAAA,IAAI,EAAE;AACFC,MAAAA,aAAa,EAAE,MADb;AAEFP,MAAAA,OAAO,EAAE,MAFP;AAGFQ,MAAAA,OAAO,EAAE,MAHP;AAIFC,MAAAA,OAAO,EAAE;AAJP,KANM;AAYZC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,WADL;AAEHF,MAAAA,OAAO,EAAC;AAFL,KAZK;AAgBZG,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE;AADL;AAhBM,GAAhB;AAqBA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BlB,QAAQ,CAACD,YAAD,EAAe;AAAEoB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,QAAQ,EAAEjB;AAAZ;AAAb,GAAf,CAAzC;AACA,MAAIa,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,WAAUA,KAAK,CAACI,OAAQ,EAAhC;AACX,sBACI;AAAK,IAAA,KAAK,EAAEjB,MAAM,CAACC,SAAnB;AAAA,eACKiB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,IAAI,CAACM,eAA3B,CADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,KAAK,EAAEpB,MAAM,CAACI,IAAlB;AAAA,gBAEQU,IAAI,CAACM,eAAL,CAAqBC,GAArB,CAAyBC,IAAI,IAAI;AAC7B,4BAAO;AAAI,UAAA,KAAK,EAAEtB,MAAM,CAACQ,KAAlB;AAAA,uCAA0B;AAAM,YAAA,KAAK,EAAER,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA1B,OAAmEY,IAAI,CAACC,KAAxE,qBAAgF;AAAM,YAAA,KAAK,EAAEvB,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhF,OAAwHY,IAAI,CAACE,IAA7H,qBAAoI;AAAM,YAAA,KAAK,EAAExB,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApI,QAA8KY,IAAI,CAACG,KAAnL,qBAA2L;AAAM,YAAA,KAAK,EAAEzB,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3L,EAAkOY,IAAI,CAACI,IAAvO;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AAFR;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAvCD;;GAAM7B,e;UAuB+BD,Q;;;KAvB/BC,e;AAyCN,eAAeA,eAAf","sourcesContent":["import React from 'react'\nimport { GET_MY_BOATS } from '../../queries'\nimport { useQuery } from '@apollo/client'\n\nconst PersonWithBoats = ({ display, id }) => {\n\n    const styles = ({\n        container: {\n            display: display,\n            position: 'relative',\n            top: '20px',\n        },\n        list: {\n            listStyleType: 'none',\n            display: 'grid',\n            gridGap: '10px',\n            padding: '10px'\n        },\n        child: {\n            border: 'solid 1px',\n            padding:'10px'\n        },\n        grey: {\n            color: 'grey'\n        }\n    })\n\n    const { loading, error, data } = useQuery(GET_MY_BOATS, { variables: { personId: id } })\n    if (loading) return '..'\n    if (error) return `Errror! ${error.message}`\n    return (\n        <div style={styles.container}>\n            {console.log('data=>', data.personWithboats)}\n            <h3>My Boats</h3>\n            <ul style={styles.list}>\n                {\n                    data.personWithboats.map(item => {\n                        return <li style={styles.child}> <span style={styles.grey}>Model:</span> {item.model}, <span style={styles.grey}>Year:</span> {item.year}, <span style={styles.grey}>Price:</span> ${item.price}, <span style={styles.grey}>Make:</span>{item.make}</li>\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default PersonWithBoats;\n"]},"metadata":{},"sourceType":"module"}