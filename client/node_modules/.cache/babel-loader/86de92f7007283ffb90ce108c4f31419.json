{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rakesh/langara/Term 4/final exam/rakesh/client/src/components/forms/AddBoat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Form, Input, Button } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ADD_PERSON, GET_PEOPLE, ADD_BOAT } from '../../queries';\n\nconst AddBoat = () => {\n  _s();\n\n  const [id] = useState(uuidv4());\n  const [addPerson] = useMutation(ADD_PERSON);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const personId = 1;\n    const {\n      model,\n      year,\n      price,\n      make,\n      id\n    } = values;\n    ADD_BOAT({\n      variables: {\n        id,\n        model,\n        year,\n        price,\n        make,\n        personId\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addPerson: {\n          __typename: 'Boat',\n          id,\n          firstName,\n          lastName\n        }\n      },\n      update: (proxy, {\n        data: {\n          addPerson\n        }\n      }) => {\n        const data = proxy.readQuery({\n          query: GET_PEOPLE\n        });\n        proxy.writeQuery({\n          query: GET_PEOPLE,\n          data: { ...data,\n            people: [...data.people, addPerson]\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"add-person-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    size: \"large\",\n    style: {\n      marginBottom: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"model\",\n      rules: [{\n        required: true,\n        message: 'Please input boat model'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. Mazda 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"year\",\n      rules: [{\n        required: true,\n        message: 'Please input build year'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. 1996\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"price\",\n      rules: [{\n        required: true,\n        message: 'Please input price'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. 307550\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"make\",\n      rules: [{\n        required: true,\n        message: 'Please input boat make'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"i.e. hydra sport\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      shouldUpdate: true,\n      children: () => /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n          errors\n        }) => errors.length).length,\n        children: \"Add Boat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBoat, \"fjzFsR4a+jrJktvTUcmKIpF0Wao=\", false, function () {\n  return [useMutation, Form.useForm];\n});\n\n_c = AddBoat;\nexport default AddBoat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBoat\");","map":{"version":3,"sources":["/Users/rakesh/langara/Term 4/final exam/rakesh/client/src/components/forms/AddBoat.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","v4","uuidv4","ADD_PERSON","GET_PEOPLE","ADD_BOAT","AddBoat","id","addPerson","form","useForm","forceUpdate","onFinish","values","personId","model","year","price","make","variables","optimisticResponse","__typename","firstName","lastName","update","proxy","data","readQuery","query","writeQuery","people","marginBottom","required","message","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/client'\n\nimport { Form, Input, Button } from 'antd'\n\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { ADD_PERSON, GET_PEOPLE, ADD_BOAT } from '../../queries'\n\nconst AddBoat = () => {\n    const [id] = useState(uuidv4())\n    const [addPerson] = useMutation(ADD_PERSON)\n\n    const [form] = Form.useForm()\n    const [, forceUpdate] = useState()\n\n    // To disable submit button at the beginning.\n    useEffect(() => {\n        forceUpdate({})\n    }, [])\n\n    const onFinish = values => {\n        const personId = 1\n        const { model, year, price, make, id } = values\n\n        ADD_BOAT({\n            variables: {\n                id,\n                model,\n                year,\n                price,\n                make,\n                personId\n            },\n            optimisticResponse: {\n                __typename: 'Mutation',\n                addPerson: {\n                    __typename: 'Boat',\n                    id,\n                    firstName,\n                    lastName\n                }\n            },\n            update: (proxy, { data: { addPerson } }) => {\n                const data = proxy.readQuery({ query: GET_PEOPLE })\n                proxy.writeQuery({\n                    query: GET_PEOPLE,\n                    data: {\n                        ...data,\n                        people: [...data.people, addPerson]\n                    }\n                })\n            }\n        })\n    }\n\n    return (\n        <Form\n            form={form}\n            name='add-person-form'\n            layout='inline'\n            onFinish={onFinish}\n            size='large'\n            style={{ marginBottom: '40px' }}\n        >\n            <Form.Item\n                name='model'\n                rules={[{ required: true, message: 'Please input boat model' }]}\n            >\n                <Input placeholder='i.e. Mazda 3' />\n            </Form.Item>\n            <Form.Item\n                name='year'\n                rules={[{ required: true, message: 'Please input build year' }]}\n            >\n                <Input placeholder='i.e. 1996' />\n            </Form.Item>\n            <Form.Item\n                name='price'\n                rules={[{ required: true, message: 'Please input price' }]}\n            >\n                <Input placeholder='i.e. 307550' />\n            </Form.Item>\n            <Form.Item\n                name='make'\n                rules={[{ required: true, message: 'Please input boat make' }]}\n            >\n                <Input placeholder='i.e. hydra sport' />\n            </Form.Item>\n            <Form.Item shouldUpdate={true}>\n                {() => (\n                    <Button\n                        type='primary'\n                        htmlType='submit'\n                        disabled={\n                            !form.isFieldsTouched(true) ||\n                            form.getFieldsError().filter(({ errors }) => errors.length).length\n                        }\n                    >\n                        Add Boat\n                    </Button>\n                )}\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default AddBoat\n"]},"metadata":{},"sourceType":"module"}